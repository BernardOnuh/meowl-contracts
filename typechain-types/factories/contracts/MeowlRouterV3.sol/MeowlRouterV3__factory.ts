/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  MeowlRouterV3,
  MeowlRouterV3Interface,
} from "../../../contracts/MeowlRouterV3.sol/MeowlRouterV3";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "recover",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "amount0Delta",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "amount1Delta",
        type: "int256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "uniswapV3SwapCallback",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60a080604052346100235733608052610c1990816100298239608051816107f50152f35b600080fdfe604060808152600490813610156104a8575b361561024557600090813560601c9260143560601c8260283560e81c73c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2958688148061049f575b156103ab57508661006a620186a0610063346108f7565b04346108d4565b33905b8451916100798361074a565b83835260209a8b9162ffffff838601958a875260608a8201918a8352019260018060a01b03978895868093169c8d8752519788015251168d8601525116606084015251166080820152608081526100cf816107ac565b868410928951956370a0823160e01b95868852888b8901528d886024818d5afa9788156103a057908a918f60009a61036b575b505083926101189261011392610906565b610962565b1692600160ff1b811015610260578415610348576401000276a4918b94928b94928a975b8751988997630251596160e31b89528801526024870152604486015216606484015260a060848401528051908160a48501528d60005b83811061032e57505050600060c484838383839684010152601f801991011681010301925af18015610323579087916102fa575b505190815282858201528781602481875afa9081156102ef576000916102bd575b50906101d2916108d4565b95602b3560801c8710610285575030146101e857005b8084036102655750823b15610260578360246000928385519687948593632e1a7d4d60e01b85528401525af190811561025657509161023f9161024593610247575b50620186a0610238826108f7565b04906108d4565b33610b98565b005b6102509061077c565b3861022a565b513d6000823e3d90fd5b600080fd5b9250505061027d82620186a0610238610245956108f7565b903390610afe565b8360649186519162461bcd60e51b83528201526013602482015272151bdbc81b1a5d1d1b19481c9958d95a5d9959606a1b6044820152fd5b908882813d83116102e8575b6102d381836107c8565b810103126102e55750516101d26101c7565b80fd5b503d6102c9565b86513d6000823e3d90fd5b813d831161031c575b61030d81836107c8565b810103126102605785386101a6565b503d610303565b87513d6000823e3d90fd5b82810182015188820160c401528d96508795508101610172565b73fffd8963efd1fc6a506488495d951d5263988d25918b94928b94928a9761013c565b90809350819a929a3d8311610399575b61038581836107c8565b810103126102e5575051968990838f610102565b503d61037b565b8c513d6000823e3d90fd5b909151906370a0823160e01b808352308684015260209182846024818d5afa93841561046057819461046c575b506103ea603b3560801c30338d610a5c565b8751918252308783015282826024818d5afa928315610460579181899695938c95610424575b5050509061041d916108d4565b309061006d565b925092949550809350813d8311610459575b61044081836107c8565b810103126102e5575051859291889161041d3880610410565b503d610436565b508751903d90823e3d90fd5b9093508281813d8311610498575b61048481836107c8565b81010312610494575192386103d8565b8380fd5b503d61047a565b5034151561004c565b6000803560e01c80630cd865ec146107095763fa461e33146104ca5750610011565b903461067d57606036600319011261067d57602435604435843567ffffffffffffffff8083116106f857366023840112156106f857828701359081116106f8578201923660248501116106f85785821393848015610700575b156106fc578360809103126106f857845161053d8161074a565b61054960248501610736565b9081815261055960448601610736565b80602083015260648601359562ffffff8716968781036106f45761058a60846105a793610113938d88015201610736565b60608501908152976001600160a01b039586948516908516610906565b1633036106f05781905116935116936000146106e85750915b73c02aaa39b223fe8d0a0e5c4f27ead9083c756cc291828114806106de575b156106b6575050803b15610494578251630d0e30db60e41b81528481878186865af180156106ac57610692575b50825163a9059cbb60e01b81523395810195865260208681019390935293948491908290879082906040015b03925af1908115610689575061064e575b505b80f35b6020813d8211610681575b81610666602093836107c8565b8101031261067d5751801515036102e55738610649565b5080fd5b3d9150610659565b513d84823e3d90fd5b90610638946106a36020949361077c565b9450909161060c565b84513d87823e3d90fd5b929350939450503083146000146106d35761064b92503390610afe565b61064b923391610a5c565b50834710156105df565b9050916105c0565b8780fd5b8a80fd5b8580fd5b8680fd5b50868213610523565b50823461067d57602036600319011261067d57356001600160a01b038116810361067d5761064b906107ea565b35906001600160a01b038216820361026057565b6080810190811067ffffffffffffffff82111761076657604052565b634e487b7160e01b600052604160045260246000fd5b67ffffffffffffffff811161076657604052565b6060810190811067ffffffffffffffff82111761076657604052565b60a0810190811067ffffffffffffffff82111761076657604052565b90601f8019910116810190811067ffffffffffffffff82111761076657604052565b6001600160a01b03907f0000000000000000000000000000000000000000000000000000000000000000821633036108a957168061082f575061082d4733610b98565b565b6040516370a0823160e01b81523060048201529190602083602481845afa92831561089d5760009361086a575b509161082d91923390610afe565b6020813d8211610895575b81610882602093836107c8565b810103126104945751925061082d61085c565b3d9150610875565b6040513d6000823e3d90fd5b606460405162461bcd60e51b815260206004820152600460248201526373686f6f60e01b6044820152fd5b919082039182116108e157565b634e487b7160e01b600052601160045260246000fd5b9060016000921517156108e157565b9162ffffff9160006040805161091b81610790565b8281526020810183905201526001600160a01b03908082168583161161095c575b816040519561094a87610790565b16855216602084015216604082015290565b9361093c565b805160208201516001600160a01b039291831691908316908183101561026057604062ffffff91015116604051916020830193845260408301526060820152606081526109ae8161074a565b519020604051602081019160ff60f81b83527307e610c722b66148d8c6b92967c99cd1ba8c7e6160621b602183015260358201527fe34f199b19b2b4f47f68442619d555527d244f78a3297ea89325f843f87b8b54605582015260558152610a158161074a565b5190201690565b3d15610a57573d9067ffffffffffffffff82116107665760405191610a4b601f8201601f1916602001846107c8565b82523d6000602084013e565b606090565b6040516323b872dd60e01b602082019081526001600160a01b0393841660248301529383166044820152606480820195909552938452600093849391928491610aa4816107ac565b5193165af1610ab1610a1c565b5015610ab957565b60405162461bcd60e51b815260206004820152601760248201527f736166655472616e7366657246726f6d206661696c65640000000000000000006044820152606490fd5b60405163a9059cbb60e01b602082019081526001600160a01b039390931660248201526044808201949094529283526000928392908390610b406064826107c8565b51926001600160a01b03165af1610b55610a1c565b5015610b5d57565b60405162461bcd60e51b81526020600482015260136024820152721cd85999551c985b9cd9995c8819985a5b1959606a1b6044820152606490fd5b600080809381935af115610ba857565b60405162461bcd60e51b815260206004820152601360248201527211551217d514905394d1915497d19052531151606a1b6044820152606490fdfea2646970667358221220e098f9e9ddc916f49a3848d8bfe3d7c4e2ef04c8c5513908aa47348480d350cd64736f6c63430008130033";

type MeowlRouterV3ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MeowlRouterV3ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MeowlRouterV3__factory extends ContractFactory {
  constructor(...args: MeowlRouterV3ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MeowlRouterV3> {
    return super.deploy(overrides || {}) as Promise<MeowlRouterV3>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): MeowlRouterV3 {
    return super.attach(address) as MeowlRouterV3;
  }
  override connect(signer: Signer): MeowlRouterV3__factory {
    return super.connect(signer) as MeowlRouterV3__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MeowlRouterV3Interface {
    return new utils.Interface(_abi) as MeowlRouterV3Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MeowlRouterV3 {
    return new Contract(address, _abi, signerOrProvider) as MeowlRouterV3;
  }
}
